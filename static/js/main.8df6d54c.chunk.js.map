{"version":3,"sources":["components/EmployeeData.js","components/Employee.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeData","props","componentDidMount","fetchUpdate","fetchData","a","axios","get","result","results","data","first","name","last","title","employee","gender","phone","email","dob","age","rows","state","push","setState","i","columns","label","field","sort","width","this","Component","Employee","style","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAwFeA,E,kDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuCRC,kBAAoB,WAClB,EAAKC,eAzCY,EA2CnBC,UA3CmB,sBA2CP,wCAAAC,EAAA,sEACWC,IAAMC,IA/Cd,8BA8CH,OACJC,EADI,OAGJC,EAAUD,EAAOE,KAAKD,QAAQ,GAE9BE,EAAQF,EAAQG,KAAKD,MACrBE,EAAOJ,EAAQG,KAAKC,KACpBC,EAAQL,EAAQG,KAAKE,MAErBC,EAAW,CACfH,KAAK,GAAD,OAAKE,EAAL,YAAcH,EAAd,YAAuBE,GAC3BG,OAAQP,EAAQO,OAChBC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,IAAKV,EAAQU,IAAIC,MAGfC,EAAO,EAAKC,MAAMD,MACjBE,KAAKR,GAEV,EAAKS,SAAS,CACZH,KAAMA,IArBE,4CA3CO,EAoEnBlB,YAAc,WAEZ,IADA,IACSsB,EAAI,EAAGA,EADG,IACaA,IAC9B,EAAKrB,aArEP,EAAKkB,MAAQ,CACXI,QAAS,CACP,CACEC,MAAO,OACPC,MAAO,OACPC,KAAM,MACNC,MAAO,KAGT,CACEH,MAAO,SACPC,MAAO,SACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,SACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAET,CACEH,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,MAAO,MAGXT,KAAM,IApCS,E,0CA0EnB,WACE,IAAIX,EAAOqB,KAAKT,MAEhB,OAAO,cAAC,IAAD,CAAcZ,KAAMA,Q,GA9EJsB,aCcZC,EAjBf,uKAEI,cAFJ,oBAQI,WACI,OACI,qBAAKC,MAAO,CAAEJ,MAAO,OAArB,SACI,cAAC,EAAD,UAXhB,GAA8BE,a,OCSfG,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8df6d54c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { MDBDataTable } from \"mdbreact\";\n\nconst fetchURL = \"https://randomuser.me/api/\";\n\nclass EmployeeData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        {\n          label: \"Name\",\n          field: \"name\",\n          sort: \"asc\",\n          width: 150,\n        },\n\n        {\n          label: \"Gender\",\n          field: \"gender\",\n          sort: \"asc\",\n          width: 200,\n        },\n        {\n          label: \"Phone\",\n          field: \"phone\",\n          sort: \"asc\",\n          width: 100,\n        },\n        {\n          label: \"E-mail\",\n          field: \"email\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"DOB\",\n          field: \"dob\",\n          sort: \"asc\",\n          width: 100,\n        },\n      ],\n      rows: [],\n    };\n  }\n\n  componentDidMount = () => {\n    this.fetchUpdate();\n  };\n  fetchData = async () => {\n    const result = await axios.get(fetchURL);\n    // console.log({ result })\n    const results = result.data.results[0];\n\n    const first = results.name.first;\n    const last = results.name.last;\n    const title = results.name.title;\n\n    const employee = {\n      name: `${title} ${first} ${last}`,\n      gender: results.gender,\n      phone: results.phone,\n      email: results.email,\n      dob: results.dob.age,\n    };\n\n    let rows = this.state.rows;\n    rows.push(employee);\n\n    this.setState({\n      rows: rows,\n    });\n  };\n\n  fetchUpdate = () => {\n    const fetchCount = 100;\n    for (var i = 0; i < fetchCount; i++) {\n      this.fetchData();\n    }\n  };\n  render() {\n    let data = this.state;\n\n    return <MDBDataTable data={data} />;\n  }\n}\n\nexport default EmployeeData;\n","import React, { Component } from 'react'\n\nimport EmployeeData from './EmployeeData'\nexport class Employee extends Component {\n\n    componentDidMount() {\n\n\n    }\n\n\n    render() {\n        return (\n            <div style={{ width: \"80%\" }}>\n                <EmployeeData />\n            </div>\n        )\n    }\n}\n\nexport default Employee\n","import React from \"react\";\nimport Employee from \"./components/Employee\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Employee />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}